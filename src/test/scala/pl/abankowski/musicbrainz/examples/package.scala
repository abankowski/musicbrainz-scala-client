package pl.abankowski.musicbrainz
import play.api.libs.json.JsNull

import play.api.libs.json.Json
package object examples {

  val artistSearchJson1 = Json.arr(
    Json.obj("id" -> "92304773-58ed-47ff-a5e1-263508f41681",
      "type" -> "Person",
      "score" -> "100",
      "name" -> "John",
      "sort-name" -> "John",
      "country" -> "DE",
      "area" -> Json.obj("id" -> "85752fda-13c4-31a3-bee5-0e5cb1f51dad",
        "name" -> "Germany",
        "sort-name" -> "Germany"),
      "disambiguation" -> "German guest vocalist for Monsieur Charles",
      "life-span" -> Json.obj("ended" -> JsNull)),
    Json.obj("id" -> "8949e495-f22b-4a82-acf1-0843342c00c0",
      "type" -> "Person",
      "score" -> "100",
      "name" -> "John",
      "sort-name" -> "John",
      "country" -> "NL",
      "area" -> Json.obj("id" -> "ef1b7cc0-cd26-36f4-8ea0-04d9623786c7",
        "name" -> "Netherlands",
        "sort-name" -> "Netherlands"),
      "disambiguation" -> "Dutch Singer",
      "life-span" -> Json.obj("ended" -> JsNull)),
    Json.obj("id" -> "b6aad87e-6cfd-4d71-9bf4-0fbc2846b463",
      "type" -> "Person",
      "score" -> "100",
      "name" -> "John",
      "sort-name" -> "John",
      "gender" -> "male",
      "disambiguation" -> "unknown artist; performed \"Dirty Old Town\" with Waxies Dargle and David Geraghty",
      "life-span" -> Json.obj("ended" -> JsNull)),
    Json.obj("id" -> "605e8e16-6ff9-41b6-a3e2-0d2367f37961",
      "type" -> "Group",
      "score" -> "88",
      "name" -> "John John",
      "sort-name" -> "John John",
      "disambiguation" -> "80s Italo disco group",
      "life-span" -> Json.obj("ended" -> JsNull)),
    Json.obj("id" -> "98684db6-e3c7-43e4-9afa-aef0a84b251c",
      "score" -> "81",
      "name" -> "John-John",
      "sort-name" -> "John-John",
      "life-span" -> Json.obj("ended" -> JsNull)),
    Json.obj("id" -> "eecc590d-19b6-4d6e-a8bf-f910280cff0b",
      "type" -> "Group",
      "score" -> "70",
      "name" -> "John & John",
      "sort-name" -> "John & John",
      "country" -> "CH",
      "area" -> Json.obj("id" -> "1333ff06-8e3d-3c8e-9f3a-13a2a38b41df",
        "name" -> "Switzerland",
        "sort-name" -> "Switzerland"),
      "life-span" -> Json.obj("ended" -> JsNull)),
    Json.obj("id" -> "17aeb25d-f809-48d3-adab-59e3fa9866cc",
      "type" -> "Person",
      "score" -> "70",
      "name" -> "John St. John",
      "sort-name" -> "St. John, John",
      "life-span" -> Json.obj("ended" -> JsNull),
      "aliases" -> Json.arr(Json.obj("sort-name" -> "John St.John",
        "name" -> "John St.John",
        "locale" -> JsNull,
        "type" -> JsNull,
        "primary" -> JsNull,
        "begin-date" -> JsNull,
        "end-date" -> JsNull))),
    Json.obj("id" -> "5444ec84-3f48-4cec-b147-89033d47b80f",
      "type" -> "Person",
      "score" -> "70",
      "name" -> "DJ John John",
      "sort-name" -> "John John, DJ",
      "life-span" -> Json.obj("ended" -> JsNull)),
    Json.obj("id" -> "f48bffaf-e763-4f8e-8b88-3dc04d9ec57c",
      "type" -> "Person",
      "score" -> "67",
      "name" -> "John St. John",
      "sort-name" -> "St. John, John",
      "disambiguation" -> "OverClocked ReMixer",
      "life-span" -> Json.obj("begin" -> "1983-12-19",
        "ended" -> JsNull)),
    Json.obj("id" -> "38d64df7-5b7f-42ca-9d98-9541640ca84f",
      "type" -> "Person",
      "score" -> "65",
      "name" -> "John Holt",
      "sort-name" -> "Holt, John",
      "gender" -> "male",
      "country" -> "JM",
      "area" -> Json.obj("id" -> "2dd47a64-91d5-3b13-bc94-80043ed063d7",
        "name" -> "Jamaica",
        "sort-name" -> "Jamaica"),
      "ipis" -> Json.arr("00034450999"),
      "life-span" -> Json.obj("begin" -> "1947-07-11",
        "ended" -> JsNull),
      "aliases" -> Json.arr(Json.obj("sort-name" -> "John Hold",
        "name" -> "John Hold",
        "locale" -> JsNull,
        "type" -> JsNull,
        "primary" -> JsNull,
        "begin-date" -> JsNull,
        "end-date" -> JsNull))),
    Json.obj("id" -> "5c3e587a-32c0-4961-a766-7361c19c04ab",
      "type" -> "Person",
      "score" -> "65",
      "name" -> "John MacDonald",
      "sort-name" -> "MacDonald, John",
      "country" -> "GB",
      "area" -> Json.obj("id" -> "8a754a16-0027-3a29-b6d7-2b40ea0481ed",
        "name" -> "United Kingdom",
        "sort-name" -> "United Kingdom"),
      "disambiguation" -> "Scottish accordionist",
      "life-span" -> Json.obj("ended" -> JsNull),
      "aliases" -> Json.arr(Json.obj("sort-name" -> "John Macdonald",
        "name" -> "John Macdonald",
        "locale" -> JsNull,
        "type" -> JsNull,
        "primary" -> JsNull,
        "begin-date" -> JsNull,
        "end-date" -> JsNull))),
    Json.obj("id" -> "18c1e06b-fe76-4802-b070-53a2f6b707bd",
      "type" -> "Person",
      "score" -> "65",
      "name" -> "John Mayall",
      "sort-name" -> "Mayall, John",
      "gender" -> "male",
      "country" -> "GB",
      "area" -> Json.obj("id" -> "8a754a16-0027-3a29-b6d7-2b40ea0481ed",
        "name" -> "United Kingdom",
        "sort-name" -> "United Kingdom"),
      "life-span" -> Json.obj("begin" -> "1933-11-29",
        "ended" -> JsNull),
      "aliases" -> Json.arr(Json.obj("sort-name" -> "John Mayal",
        "name" -> "John Mayal",
        "locale" -> JsNull,
        "type" -> JsNull,
        "primary" -> JsNull,
        "begin-date" -> JsNull,
        "end-date" -> JsNull)),
      "tags" -> Json.arr(Json.obj("count" -> 1,
        "name" -> "harmonica blues"),
        Json.obj("count" -> 1,
          "name" -> "rock"),
        Json.obj("count" -> 1,
          "name" -> "british blues"),
        Json.obj("count" -> 1,
          "name" -> "british"),
        Json.obj("count" -> 1,
          "name" -> "electric blues"),
        Json.obj("count" -> 1,
          "name" -> "blues rock"),
        Json.obj("count" -> 1,
          "name" -> "classic pop and rock"))),
    Json.obj("id" -> "e31ff965-ddda-43d9-b24f-267a1924ff4a",
      "type" -> "Person",
      "score" -> "65",
      "name" -> "John Parr",
      "sort-name" -> "Parr, John",
      "gender" -> "male",
      "country" -> "GB",
      "area" -> Json.obj("id" -> "8a754a16-0027-3a29-b6d7-2b40ea0481ed",
        "name" -> "United Kingdom",
        "sort-name" -> "United Kingdom"),
      "life-span" -> Json.obj("begin" -> "1954-11-18",
        "ended" -> JsNull),
      "aliases" -> Json.arr(Json.obj("sort-name" -> "Jon Parr",
        "name" -> "Jon Parr",
        "locale" -> JsNull,
        "type" -> JsNull,
        "primary" -> JsNull,
        "begin-date" -> JsNull,
        "end-date" -> JsNull),
        Json.obj("sort-name" -> "J.Parr",
          "name" -> "J.Parr",
          "locale" -> JsNull,
          "type" -> JsNull,
          "primary" -> JsNull,
          "begin-date" -> JsNull,
          "end-date" -> JsNull),
        Json.obj("sort-name" -> "Parr, John",
          "name" -> "Parr, John",
          "locale" -> JsNull,
          "type" -> JsNull,
          "primary" -> JsNull,
          "begin-date" -> JsNull,
          "end-date" -> JsNull)),
      "tags" -> Json.arr(Json.obj("count" -> 1,
        "name" -> "production music"))),
    Json.obj("id" -> "e821a756-487f-4931-a02f-27cf11cec7bf",
      "type" -> "Person",
      "score" -> "65",
      "name" -> "John Martyn",
      "sort-name" -> "Martyn, John",
      "gender" -> "male",
      "country" -> "GB",
      "area" -> Json.obj("id" -> "8a754a16-0027-3a29-b6d7-2b40ea0481ed",
        "name" -> "United Kingdom",
        "sort-name" -> "United Kingdom"),
      "begin-area" -> Json.obj("id" -> "d9375b45-716f-4b6f-95ec-c292576d81c8",
        "name" -> "New Malden",
        "sort-name" -> "New Malden"),
      "end-area" -> Json.obj("id" -> "efc94827-b2fe-4926-b962-cac8e2efb409",
        "name" -> "Kilkenny",
        "sort-name" -> "Kilkenny"),
      "disambiguation" -> "British singer-songwriter and guitarist",
      "life-span" -> Json.obj("begin" -> "1948-09-11",
        "end" -> "2009-01-29",
        "ended" -> true),
      "tags" -> Json.arr(Json.obj("count" -> 2,
        "name" -> "folk"),
        Json.obj("count" -> 1,
          "name" -> "singer/songwriter"),
        Json.obj("count" -> 1,
          "name" -> "contemporary folk"),
        Json.obj("count" -> 1,
          "name" -> "folk rock"))),
    Json.obj("id" -> "b48f22c6-cab9-436c-a6d0-99839a19ee05",
      "type" -> "Person",
      "score" -> "65",
      "name" -> "John Linnell",
      "sort-name" -> "Linnell, John",
      "gender" -> "male",
      "country" -> "US",
      "area" -> Json.obj("id" -> "489ce91b-6658-3307-9877-795b68554c98",
        "name" -> "United States",
        "sort-name" -> "United States"),
      "begin-area" -> Json.obj("id" -> "74e50e58-5deb-4b99-93a2-decbb365c07f",
        "name" -> "New York",
        "sort-name" -> "New York"),
      "life-span" -> Json.obj("begin" -> "1959-06-12",
        "ended" -> JsNull),
      "aliases" -> Json.arr(Json.obj("sort-name" -> "Johnny Hart",
        "name" -> "Johnny Hart",
        "locale" -> JsNull,
        "type" -> JsNull,
        "primary" -> JsNull,
        "begin-date" -> JsNull,
        "end-date" -> JsNull),
        Json.obj("sort-name" -> "John Sidney Linnell",
          "name" -> "John Sidney Linnell",
          "locale" -> JsNull,
          "type" -> JsNull,
          "primary" -> JsNull,
          "begin-date" -> JsNull,
          "end-date" -> JsNull))),
    Json.obj("id" -> "3178cc4c-cd9f-4842-96fb-28bf9cfec591",
      "type" -> "Person",
      "score" -> "65",
      "name" -> "John Hartford",
      "sort-name" -> "Hartford, John",
      "gender" -> "male",
      "country" -> "US",
      "area" -> Json.obj("id" -> "489ce91b-6658-3307-9877-795b68554c98",
        "name" -> "United States",
        "sort-name" -> "United States"),
      "begin-area" -> Json.obj("id" -> "74e50e58-5deb-4b99-93a2-decbb365c07f",
        "name" -> "New York",
        "sort-name" -> "New York"),
      "end-area" -> Json.obj("id" -> "e68879f9-bd95-41ff-96ba-c082ff37cc74",
        "name" -> "Nashville",
        "sort-name" -> "Nashville"),
      "life-span" -> Json.obj("begin" -> "1937-12-30",
        "end" -> "2001-06-04",
        "ended" -> true),
      "tags" -> Json.arr(Json.obj("count" -> 1,
        "name" -> "folk"))),
    Json.obj("id" -> "e78202c9-7717-435c-9aac-dd5ebc4e64d5",
      "type" -> "Person",
      "score" -> "65",
      "name" -> "John Hiatt",
      "sort-name" -> "Hiatt, John",
      "gender" -> "male",
      "country" -> "US",
      "area" -> Json.obj("id" -> "489ce91b-6658-3307-9877-795b68554c98",
        "name" -> "United States",
        "sort-name" -> "United States"),
      "life-span" -> Json.obj("begin" -> "1952-08-20",
        "ended" -> JsNull),
      "aliases" -> Json.arr(Json.obj("sort-name" -> "John Hyatt",
        "name" -> "John Hyatt",
        "locale" -> JsNull,
        "type" -> JsNull,
        "primary" -> JsNull,
        "begin-date" -> JsNull,
        "end-date" -> JsNull)),
      "tags" -> Json.arr(Json.obj("count" -> 1,
        "name" -> "classic pop and rock"),
        Json.obj("count" -> 1,
          "name" -> "folk"),
        Json.obj("count" -> 1,
          "name" -> "blues"))),
    Json.obj("id" -> "e86492c1-0376-4df0-8042-8ba058c83960",
      "type" -> "Person",
      "score" -> "65",
      "name" -> "John Prine",
      "sort-name" -> "Prine, John",
      "gender" -> "male",
      "area" -> Json.obj("id" -> "e68879f9-bd95-41ff-96ba-c082ff37cc74",
        "name" -> "Nashville",
        "sort-name" -> "Nashville"),
      "begin-area" -> Json.obj("id" -> "9ffba150-8ad0-40f0-8a73-e756bff2f00a",
        "name" -> "Maywood",
        "sort-name" -> "Maywood"),
      "life-span" -> Json.obj("begin" -> "1946-10-10",
        "ended" -> JsNull),
      "aliases" -> Json.arr(Json.obj("sort-name" -> "Prine, John",
        "name" -> "Prine, John",
        "locale" -> JsNull,
        "type" -> JsNull,
        "primary" -> JsNull,
        "begin-date" -> JsNull,
        "end-date" -> JsNull)),
      "tags" -> Json.arr(Json.obj("count" -> 1,
        "name" -> "classic pop and rock"),
        Json.obj("count" -> 1,
          "name" -> "folk"),
        Json.obj("count" -> 1,
          "name" -> "singer/songwriter"),
        Json.obj("count" -> 1,
          "name" -> "country"))),
    Json.obj("id" -> "3b81f816-bdcb-42d0-a0dd-1aa4fc4e19ec",
      "type" -> "Person",
      "score" -> "65",
      "name" -> "John Farnham",
      "sort-name" -> "Farnham, John",
      "gender" -> "male",
      "country" -> "AU",
      "area" -> Json.obj("id" -> "106e0bec-b638-3b37-b731-f53d507dc00e",
        "name" -> "Australia",
        "sort-name" -> "Australia"),
      "life-span" -> Json.obj("begin" -> "1949-07-01",
        "ended" -> JsNull),
      "aliases" -> Json.arr(Json.obj("sort-name" -> "Johan Farnham",
        "name" -> "Johan Farnham",
        "locale" -> JsNull,
        "type" -> JsNull,
        "primary" -> JsNull,
        "begin-date" -> JsNull,
        "end-date" -> JsNull),
        Json.obj("sort-name" -> "John Earnham",
          "name" -> "John Earnham",
          "locale" -> JsNull,
          "type" -> JsNull,
          "primary" -> JsNull,
          "begin-date" -> JsNull,
          "end-date" -> JsNull),
        Json.obj("sort-name" -> "Johnny Farnham",
          "name" -> "Johnny Farnham",
          "locale" -> JsNull,
          "type" -> JsNull,
          "primary" -> JsNull,
          "begin-date" -> JsNull,
          "end-date" -> JsNull)),
      "tags" -> Json.arr(Json.obj("count" -> 1,
        "name" -> "rock and indie"))),
    Json.obj("id" -> "7c6ef060-fe44-4c66-ae6d-a86791abaf09",
      "type" -> "Person",
      "score" -> "65",
      "name" -> "John Dowland",
      "sort-name" -> "Dowland, John",
      "gender" -> "male",
      "country" -> "GB",
      "area" -> Json.obj("id" -> "8a754a16-0027-3a29-b6d7-2b40ea0481ed",
        "name" -> "United Kingdom",
        "sort-name" -> "United Kingdom"),
      "begin-area" -> Json.obj("id" -> "f03d09b3-39dc-4083-afd6-159e3f0d462f",
        "name" -> "London",
        "sort-name" -> "London"),
      "end-area" -> Json.obj("id" -> "f03d09b3-39dc-4083-afd6-159e3f0d462f",
        "name" -> "London",
        "sort-name" -> "London"),
      "life-span" -> Json.obj("begin" -> "1563",
        "end" -> "1626",
        "ended" -> true),
      "aliases" -> Json.arr(Json.obj("sort-name" -> "ジョン・ダウランド",
        "name" -> "ジョン・ダウランド",
        "locale" -> "ja_JP",
        "type" -> "Artist name",
        "primary" -> true,
        "begin-date" -> JsNull,
        "end-date" -> JsNull),
        Json.obj("sort-name" -> "Dowland",
          "name" -> "Dowland",
          "locale" -> JsNull,
          "type" -> JsNull,
          "primary" -> JsNull,
          "begin-date" -> JsNull,
          "end-date" -> JsNull),
        Json.obj("sort-name" -> "J. Dowland",
          "name" -> "J. Dowland",
          "locale" -> JsNull,
          "type" -> JsNull,
          "primary" -> JsNull,
          "begin-date" -> JsNull,
          "end-date" -> JsNull),
        Json.obj("sort-name" -> "John Dowland (1563-1626)",
          "name" -> "John Dowland (1563-1626)",
          "locale" -> JsNull,
          "type" -> JsNull,
          "primary" -> JsNull,
          "begin-date" -> JsNull,
          "end-date" -> JsNull)),
      "tags" -> Json.arr(Json.obj("count" -> 1,
        "name" -> "classical"),
        Json.obj("count" -> 1,
          "name" -> "production music"),
        Json.obj("count" -> 1,
          "name" -> "renaissance"))),
    Json.obj("id" -> "7b0a18b7-2b32-4b26-8db3-3ea39a59e1e6",
      "type" -> "Person",
      "score" -> "65",
      "name" -> "John Tavener",
      "sort-name" -> "Tavener, John",
      "gender" -> "male",
      "country" -> "GB",
      "area" -> Json.obj("id" -> "8a754a16-0027-3a29-b6d7-2b40ea0481ed",
        "name" -> "United Kingdom",
        "sort-name" -> "United Kingdom"),
      "begin-area" -> Json.obj("id" -> "f03d09b3-39dc-4083-afd6-159e3f0d462f",
        "name" -> "London",
        "sort-name" -> "London"),
      "end-area" -> Json.obj("id" -> "2d71b77c-cec0-47dd-9516-fd01db91ca13",
        "name" -> "Dorset",
        "sort-name" -> "Dorset"),
      "disambiguation" -> "20th century composer",
      "life-span" -> Json.obj("begin" -> "1944-01-28",
        "end" -> "2013-11-12",
        "ended" -> true),
      "aliases" -> Json.arr(Json.obj("sort-name" -> "Sir John Tavener",
        "name" -> "Sir John Tavener",
        "locale" -> JsNull,
        "type" -> JsNull,
        "primary" -> JsNull,
        "begin-date" -> JsNull,
        "end-date" -> JsNull),
        Json.obj("sort-name" -> "Tavener",
          "name" -> "Tavener",
          "locale" -> JsNull,
          "type" -> JsNull,
          "primary" -> JsNull,
          "begin-date" -> JsNull,
          "end-date" -> JsNull),
        Json.obj("sort-name" -> "Travener",
          "name" -> "Travener",
          "locale" -> JsNull,
          "type" -> JsNull,
          "primary" -> JsNull,
          "begin-date" -> JsNull,
          "end-date" -> JsNull)),
      "tags" -> Json.arr(Json.obj("count" -> 2,
        "name" -> "classical"),
        Json.obj("count" -> 1,
          "name" -> "british"),
        Json.obj("count" -> 1,
          "name" -> "uk"),
        Json.obj("count" -> 1,
          "name" -> "composer"),
        Json.obj("count" -> 2,
          "name" -> "english"),
        Json.obj("count" -> 1,
          "name" -> "contemporary"),
        Json.obj("count" -> 1,
          "name" -> "british composer"))),
    Json.obj("id" -> "4256d457-1372-4b3b-b443-fd5cf9bb733f",
      "type" -> "Person",
      "score" -> "65",
      "name" -> "John Miles",
      "sort-name" -> "Miles, John",
      "gender" -> "male",
      "country" -> "GB",
      "area" -> Json.obj("id" -> "8a754a16-0027-3a29-b6d7-2b40ea0481ed",
        "name" -> "United Kingdom",
        "sort-name" -> "United Kingdom"),
      "disambiguation" -> "UK singer/songwriter/guitarist/keyboardist",
      "ipis" -> Json.arr("00089762615"),
      "life-span" -> Json.obj("begin" -> "1949-04-23",
        "ended" -> JsNull),
      "tags" -> Json.arr(Json.obj("count" -> 1,
        "name" -> "transition"))),
    Json.obj("id" -> "21bffe8e-4e04-47f6-b1aa-7ede4b14cc4e",
      "type" -> "Person",
      "score" -> "65",
      "name" -> "John Anderson",
      "sort-name" -> "Anderson, John",
      "gender" -> "male",
      "country" -> "US",
      "area" -> Json.obj("id" -> "489ce91b-6658-3307-9877-795b68554c98",
        "name" -> "United States",
        "sort-name" -> "United States"),
      "begin-area" -> Json.obj("id" -> "488a5efe-0264-47de-8ddf-abbdac5cf246",
        "name" -> "Apopka",
        "sort-name" -> "Apopka"),
      "disambiguation" -> "US country music singer-songwriter",
      "life-span" -> Json.obj("begin" -> "1954-12-13",
        "ended" -> JsNull),
      "aliases" -> Json.arr(Json.obj("sort-name" -> "Anderson John",
        "name" -> "Anderson John",
        "locale" -> JsNull,
        "type" -> JsNull,
        "primary" -> JsNull,
        "begin-date" -> JsNull,
        "end-date" -> JsNull))),
    Json.obj("id" -> "f51010e6-6fe2-46bf-97f0-f9f168710c95",
      "type" -> "Person",
      "score" -> "65",
      "name" -> "John Pizzarelli",
      "sort-name" -> "Pizzarelli, John",
      "gender" -> "male",
      "country" -> "US",
      "area" -> Json.obj("id" -> "489ce91b-6658-3307-9877-795b68554c98",
        "name" -> "United States",
        "sort-name" -> "United States"),
      "life-span" -> Json.obj("begin" -> "1960-04-06",
        "ended" -> JsNull),
      "aliases" -> Json.arr(Json.obj("sort-name" -> "John`Pizzarelli",
        "name" -> "John`Pizzarelli",
        "locale" -> JsNull,
        "type" -> JsNull,
        "primary" -> JsNull,
        "begin-date" -> JsNull,
        "end-date" -> JsNull))),
    Json.obj("id" -> "1cd4d43c-68bb-4e91-9de8-596470e413ed",
      "type" -> "Person",
      "score" -> "65",
      "name" -> "John McCutcheon",
      "sort-name" -> "McCutcheon, John",
      "gender" -> "male",
      "country" -> "US",
      "area" -> Json.obj("id" -> "489ce91b-6658-3307-9877-795b68554c98",
        "name" -> "United States",
        "sort-name" -> "United States"),
      "life-span" -> Json.obj("begin" -> "1952-08-14",
        "ended" -> JsNull),
      "aliases" -> Json.arr(Json.obj("sort-name" -> "McCutcheon, John",
        "name" -> "McCutcheon, John",
        "locale" -> JsNull,
        "type" -> JsNull,
        "primary" -> JsNull,
        "begin-date" -> JsNull,
        "end-date" -> JsNull)),
      "tags" -> Json.arr(Json.obj("count" -> 1,
        "name" -> "folk"))))

  val artistSearchResultJson = Json.obj("created" -> "2014-08-29T06:02:47.514Z", "count" -> 6120, "offset" -> 0, "artist" -> artistSearchJson1)

  val artistJson1 = Json.obj(
    "id" -> "5b11f4ce-a62d-471e-81fc-a69a8278c7da",
    "name" -> "Nirvana",
    "sort-name" -> "Nirvana",
    "type" -> "Group",
    "country" -> "US",
    "disambiguation" -> "90s US grunge band",
    "life-span" -> Json.obj(
      "ended" -> true,
      "begin" -> "1988-02",
      "end" -> "1994-04-05"),
    "aliases" -> Seq(
      Json.obj("name" -> "Nirvana US", "sort-name" -> "Nirvana US")))

  val artistJson2 = Json.obj(
    "id" -> "05cbaf37-6dc2-4f71-a0ce-d633447d90c3",
    "name" -> "東方神起",
    "sort-name" -> "TVXQ",
    "country" -> JsNull,
    "disambiguation" -> JsNull,
    "type" -> "Group",
    "life-span" -> Json.obj("ended" -> false, "begin" -> "2003"),
    "aliases" -> Seq(
      Json.obj("name" -> "DBSK", "sort-name" -> "DBSK"),
      Json.obj("name" -> "Tohoshinki", "sort-name" -> "Tohoshinki", "locale" -> "ja", "primary" -> false),
      Json.obj("name" -> "동방신기", "sort-name" -> "동방신기", "locale" -> "ko_KR", "primary" -> true)),
    "tags" -> Seq(
      Json.obj("count" -> 1, "name" -> "kpop"),
      Json.obj("count" -> 1, "name" -> "jpop"),
      Json.obj("count" -> 1, "name" -> "cpop")),
    "rating" -> Json.obj("votes-count" -> 8, "value" -> 3.9))

  val labelJson1 =
    Json.obj(
      "id" -> "46f0f4cd-8aab-4b33-b698-f459faf64190",
      "name" -> "Warp Records",
      "sort-name" -> "Warp Records",
      "label-code" -> 2070,
      "type" -> "Original Production",
      "country" -> "GB",
      "life-span" -> Json.obj("ended" -> false, "begin" -> "1989"),
      "tags" -> Seq(Json.obj("count" -> 2, "name" -> "electronic")),
      "disambiguation" -> JsNull)

  val labelJson2 =
    Json.obj(
      "id" -> "f49e877d-df8d-4a28-bbe1-689d12fc7d91",
      "name" -> "AVEX ENTERTAINMENT INC.",
      "sort-name" -> "AVEX ENTERTAINMENT INC.",
      "type" -> "Production",
      "country" -> "JP",
      "disambiguation" -> "avex's Japanese music production",
      "life-span" -> Json.obj("ended" -> false),
      "aliases" -> Seq(
        Json.obj("name" -> "AVEX MARKETING", "sort-name" -> "AVEX MARKETING"),
        Json.obj("name" -> "avex marketing", "sort-name" -> "avex marketing"),
        Json.obj("name" -> "エイベックス・エンタテインメント", "sort-name" -> "エイベックス・エンタテインメント")))

  val recordingJson =
    Json.obj(
      "id" -> "fcbcdc39-8851-4efc-a02a-ab0e13be224f",
      "title" -> "LAST ANGEL",
      "disambiguation" -> "video",
      "artist-credit" -> Seq(
        Json.obj(
          "name" -> "倖田來未",
          "joinphrase" -> " feat. ",
          "artist" -> Json.obj(
            "id" -> "455641ea-fff4-49f6-8fb4-49f961d8f1ac",
            "name" -> "倖田來未",
            "sort-name" -> "Koda, Kumi",
            "disambiguation" -> JsNull)),
        Json.obj(
          "name" -> "東方神起",
          "artist" -> Json.obj(
            "id" -> "05cbaf37-6dc2-4f71-a0ce-d633447d90c3",
            "name" -> "東方神起",
            "sort-name" -> "TVXQ",
            "disambiguation" -> JsNull),
          "joinphrase" -> "")),
      "isrcs" -> Seq("JPB600760301"),
      "length" -> 228106,
      "releases" -> Seq(
        Json.obj(
          "id" -> "abcd76db-7d5f-3eb7-b386-051c97bfe2e4",
          "title" -> "Kingdom")))

  val releaseJson =
    Json.obj(
      "id" -> "59211ea4-ffd2-4ad9-9a4e-941d3148024a",
      "title" -> "æ³o & h³æ",
      "date" -> "2003-12-04",
      "text-representation" -> Json.obj("language" -> "eng", "script" -> "Latn"),
      "country" -> "GB",
      "status" -> "Official",
      "quality" -> "normal",
      "release-group" -> Json.obj(
        "id" -> "bb5622c1-65b2-3bc4-83e6-0dcaa56abaf2",
        "primary-type" -> "EP"),
      "artist-credit" -> Seq(
        Json.obj(
          "joinphrase" -> " & ",
          "name" -> "Autechre",
          "artist" -> Json.obj(
            "id" -> "410c9baf-5469-44f6-9852-826524b80c61",
            "name" -> "Autechre",
            "sort-name" -> "Autechre",
            "disambiguation" -> JsNull)),
        Json.obj(
          "name" -> "The Hafler Trio",
          "joinphrase" -> "",
          "artist" -> Json.obj(
            "id" -> "146c01d0-d3a2-44c3-acb5-9208bce75e14",
            "sort-name" -> "Hafler Trio, The",
            "name" -> "The Hafler Trio",
            "disambiguation" -> JsNull))),
      "label-info" -> Seq(
        Json.obj(
          "label" -> Json.obj(
            "id" -> "a0759efa-f583-49ea-9a8d-d5bbce55541c",
            "name" -> "Phonometrography",
            "sort-name" -> "Phonometrography",
            "label-code" -> JsNull,
            "disambiguation" -> JsNull),
          "catalog-number" -> "pgram002")),
      "media" -> Seq(
        Json.obj(
          "track-offset" -> 0,
          "track-count" -> 1,
          "title" -> "æ³o",
          "format" -> "CD",
          "discids" -> Seq(
            Json.obj("id" -> "nN2g3a0ZSjovyIgK3bJl6_.j8C4-", "sectors" -> 73241)),
          "tracks" -> Seq(
            Json.obj(
              "number" -> "1",
              "length" -> 974546,
              "title" -> "æ³o",
              "recording" -> Json.obj(
                "disambiguation" -> "",
                "length" -> "974546",
                "video" -> 0,
                "artist-credit" -> Json.arr(),
                "id" -> "af87f070-238b-46c1-aa3e-f831ab91fa20",
                "title" -> "æ³o"),
              "artist-credit" -> Seq(Json.obj(
                "artist" -> Json.obj(
                  "disambiguation" -> "",
                  "sort-name" -> "Autechre",
                  "name" -> "Autechre",
                  "id" -> "410c9baf-5469-44f6-9852-826524b80c61"),
                "name" -> "Autechre",
                "joinphrase" -> " & "))))),
        Json.obj(
          "track-offset" -> 0,
          "track-count" -> 1,
          "title" -> "h³æ",
          "format" -> "CD",
          "discids" -> Seq(
            Json.obj("id" -> "aSHvkMnq2jZVFEK.DmSPbvN_f54-", "sectors" -> 69341)),
          "tracks" -> Seq(
            Json.obj(
              "number" -> "1",
              "length" -> 922546,
              "title" -> "h³æ",
              "recording" -> Json.obj(
                "disambiguation" -> "",
                "length" -> "974546",
                "video" -> 0,
                "artist-credit" -> Json.arr(),
                "id" -> "af87f070-238b-46c1-aa3e-f831ab91fa20",
                "title" -> "æ³o"),
              "artist-credit" -> Seq(Json.obj(
                "artist" -> Json.obj(
                  "disambiguation" -> "",
                  "sort-name" -> "Autechre",
                  "name" -> "Autechre",
                  "id" -> "410c9baf-5469-44f6-9852-826524b80c61"),
                "name" -> "Autechre",
                "joinphrase" -> " & ")))))),
      "barcode" -> JsNull,
      "disambiguation" -> JsNull,
      "packaging" -> JsNull,
      "asin" -> JsNull)

  val releaseGroupJson = Json.obj(
    "id" -> "c9fdb94c-4975-4ed6-a96f-ef6d80bb7738",
    "first-release-date" -> "2012-05-22",
    "title" -> "The Lost Tape",
    "artist-credit" -> Json.obj(
      "name" -> "50 Cent",
      "joinphrase" -> "",
      "artist" -> Json.obj(
        "id" -> "8e68819d-71be-4e7d-b41d-f1df81b01d3f",
        "name" -> "50 Cent",
        "sort-name" -> "50 Cent",
        "disambiguation" -> JsNull)),
    "primary-type" -> "Album",
    "disambiguation" -> JsNull,
    "secondary-types" -> Seq("Mixtape/Street"),
    "releases" -> Seq(
      Json.obj(
        "id" -> "2ec84eb6-ab92-4ac3-9720-32ad84c34f11",
        "title" -> "The Lost Tape")))

  val workJson = Json.obj(
    "id" -> "b1df2cf3-69a9-3bc0-be44-f71e79b27a22",
    "title" -> "HELLO! また会おうね",
    "language" -> "jpn",
    "iswcs" -> Seq("T-101.690.320-9"))
}